##循环结构
循环语句可以在满足条件的情况下，反复执行某一段代码，这段被重复执行的代码被成为循环体。
当反复执行这个循环体时，需要在合适的时候把循环条件改为假，从而结束循环，
否则循环将一直执行下去，形成死循环。
###循环语句包括4个部分：
- 初始化语句：一条或多条语句，用于完成一些初始化工作，在循环开始之前执行
- 循环条件：一个boolean表达式，决定是否执行循环体
- 循环体：循环的主体，如果循环允许，这段代码将被重复执行
- 迭代语句：在一次循环体执行结束后，对循环条件求值之前进行，
通常控制循环条件中的变量，是得循环在合适的时候结束

##while循环语句
```
while(条件){
    执行语句;
    迭代语句;
}
```
while循环每次执行循环之前，先对条件求值，如果循环条件为true，则运行循环体部分。
从上面的语法格式来看，迭代语句总位于循环体最后，因此只有当循环体能成功执行完成时，
while循环才会执行迭代语句。


##do while语句
```aidl
初始化语句；
do{
    执行语句；
    迭代；
}while(条件)
```

##for循环
更加简介的循环语句：
```aidl
for(初始化;条件；迭代){
    执行语句；
}
```